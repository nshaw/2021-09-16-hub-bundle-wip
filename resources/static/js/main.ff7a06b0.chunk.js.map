{"version":3,"sources":["components/Login/Login.js","page/catalog/catalog-page-header/CatalogPageHeader.js","page/catalog/catalog-page-footer/CatalogPageFooter.js","page/catalog/catalog-filter-tile/CatalogFilterTile.js","integration/Http.js","integration/Integration.js","page/catalog/catalog-tile/CatalogTile.js","page/catalog/catalog-tiles/CatalogTiles.js","page/catalog/catalog-page-content/CatalogPageContent.js","components/eh-bradcrumb/EhBreadcrumb.js","page/catalog/modal-add-new-bundle-group/new-boundle-group/add-bundle-to-bundle-group/AddBundleToBundleGroup.js","page/catalog/modal-add-new-bundle-group/new-boundle-group/NewBundleGroup.js","page/catalog/modal-add-new-bundle-group/ModalAddNewBundleGroup.js","page/catalog/CatalogPage.js","page/catalog/catalog-page-header-internal/CatalogPageHeaderInternal.js","page/bundle-group/modal-install-information/ModalInstallInformation.js","page/bundle-group/BundleGroupPage.js","App-carbon.js","custom-element/eh-hub.js"],"names":["Login","CatalogPageHeader","className","href","src","process","alt","CatalogPageFooter","CatalogFilterTile","categories","onFilterChange","useState","checkBoxInitialStatuses","forEach","category","categoryId","init","checkboxStatuses","setCheckboxStatuses","onChange","value","id","event","Object","keys","key","filter","listItems","map","Checkbox","checked","labelText","name","Tile","getData","url","a","mergeUrl","axios","get","then","res","data","catch","e","errorCheck","postData","payload","post","isError","hasOwnProperty","toJSON","urlOrganisations","urlCategories","urlBundles","urlBundleGroups","checkForErrorsAndSendResponse","objectLabel","errorBody","getSingleOrganisation","getAllCategories","getSingleCategory","getAllBundlesForABundleGroup","newUrl","addNewBundle","bundleData","getAllBundleGroups","getSingleBundleGroup","addNewBundleGroup","bundleGroupData","CatalogTile","CatalogTileProps","bundleGroupId","description","categoryName","setCategoryName","useEffect","history","useHistory","handleClick","evt","push","Tag","type","title","CatalogTiles","bundleGroups","bundleGroup","CatalogPageContent","reloadToken","initBGs","setAllBundleGroups","bundleGroupList","setFilteredBundleGroups","initCs","setCategories","categoryList","allBundleGroups","filteredBundleGroups","length","selectedCategoryIds","filtered","currBundleGroup","includes","EhBreadcrumb","pathElements","elementList","pathElement","index","path","toString","BreadcrumbItem","to","Breadcrumb","parseGitRepoAddr","gitRepoAddress","substring","lastIndexOf","BundleList","elemList","children","bundle","childrenInfo","target","AddBundleToBundleGroup","onAddOrRemoveBundleFromList","initialBundleList","bundleList","setBundleList","gitRepo","setGitRepo","TextInput","Button","onClick","newBundleList","dependencies","renderIcon","Add16","NewBundleGroup","onDataChange","descriptionImage","documentationUrl","status","newBundleGroup","setNewBundleGroup","changeNewBundleGroup","field","newObj","isMounted","selectItems_Category","SelectItem","text","unshift","disabled","hidden","selectItems_Status","console","log","Content","FormGroup","legendText","FileUploader","buttonLabel","labelDescription","Select","defaultValue","TextArea","cols","rows","ModalAddNewBundleGroup","afterSubmit","ModalStateManager","LauncherContent","renderLauncher","ModalContent","open","setOpen","Date","getTime","elemKey","setElemKey","resetData","document","ReactDOM","createPortal","onRequestClose","onRequestSubmit","preventDefault","newChildren","Promise","all","respArray","newBundle","bundleId","toSend","body","onRequestOpen","Modal","modalLabel","primaryButtonText","secondaryButtonText","CatalogPage","setReloadToken","CatalogPageHeaderInternal","InstallationInfo","CodeSnippet","feedback","ModalInstallInformation","props","passiveModal","BundleGroupPage","setBundleGroup","organisation","setOrganisation","setCategory","setChildren","useParams","fetchedBundleGroup","organisationId","Row","window","location","Grid","condensed","Column","lg","bundleGroupdescriptionImage","AppCarbon","exact","component","XEhApp","this","mountPoint","createElement","render","StrictMode","appendChild","HTMLElement","customElements","define"],"mappings":"mXAMeA,EAJD,WACV,OAAO,mDC8BIC,G,MA7BW,WACxB,OACI,mCACE,yBAAQC,UAAU,oBAAlB,UACI,sBAAKA,UAAU,+BAAf,UACA,mBAAGC,KAAK,gBAAgBD,UAAU,yBAAlC,SACE,qBAAKE,IAAG,UAAKC,kDAAL,aAAyDC,IAAI,mBAEvE,qBAAKJ,UAAU,iCAAf,SACE,cAAC,EAAD,SAGF,qBAAKA,UAAU,kCAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,wDADF,wYCDCK,G,MAZW,WACxB,OACI,mCACE,wBAAQL,UAAU,oBAAlB,SACE,qBAAKA,UAAU,8BAAf,0C,kDCsCKM,G,MAtCW,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,eAUpC,EAA8CC,mBATjC,WACT,IAAIC,EAA0B,GAK9B,OAJAH,EAAWI,SAAQ,SAACC,GAChBF,EAAwBE,EAASC,aAAc,KAEnDH,GAAwB,IAAQ,EACzBA,EAG4CI,IAAvD,mBAAKC,EAAL,KAAuBC,EAAvB,KAEMC,EAAW,SAACC,EAAOC,EAAIC,GACd,OAAPD,EAEAE,OAAOC,KAAKP,GAAkBJ,SAAQ,SAACY,GAAD,OAASR,EAAiBQ,IAAkB,IAAVL,MAExEH,EAAiBI,GAAMD,EACvBH,GAAiB,IAAQ,GAG7BC,EAAoBD,GACpBP,EAAea,OAAOC,KAAKP,GAAkBS,QAAO,SAAAD,GAAG,MAAW,OAANA,GAAcR,EAAiBQ,QAGzFE,EAAYlB,EAAWmB,KAAI,SAACd,GAAD,OAAc,cAACe,EAAA,EAAD,CAAUC,QAASb,EAAiBH,EAASC,YAAaI,SAAUA,EAC1DY,UAAWjB,EAASkB,KAAMX,GAAIP,EAASC,YADkCD,EAASC,eAE3I,OACI,cAACkB,EAAA,EAAD,UACI,2BAAU/B,UAAS,UALZ,iBAKY,cAAnB,UACI,cAAC2B,EAAA,EAAD,CAAUC,QAASb,GAAiB,GAAOE,SAAUA,EAAqBY,UAAW,MAC3EV,GAAI,MADsD,MAEnEM,S,0CCrCJO,EAAO,uCAAG,WAAOC,EAAKd,GAAZ,eAAAe,EAAA,6DACrBD,EAAME,EAASF,EAAKd,GADC,SAGFiB,IAChBC,IAAIJ,GACJK,MAAK,SAACC,GACL,OAAOA,EAAIC,QAEZC,OAAM,SAACC,GACN,OAAOA,KATU,cAGfF,EAHe,yBAYdG,EAAWH,IAZG,2CAAH,wDAgBPI,EAAQ,uCAAG,WAAOX,EAAKY,EAAS1B,GAArB,eAAAe,EAAA,6DACtBD,EAAME,EAASF,EAAKd,GADE,SAGHiB,IAChBU,KAAKb,EAAKY,GACVP,MAAK,SAACC,GACL,OAAOA,KAERE,OAAM,SAACC,GACN,OAAOA,KATW,cAGhBF,EAHgB,yBAYfG,EAAWH,IAZI,2CAAH,0DAgBfL,EAAW,SAACF,EAAKd,GAKrB,OAJIA,IACFc,EAAG,UAAMA,GAAN,OAAYd,IAGVc,GAIHU,EAAa,SAACH,GAClB,IAAIO,GAAU,EAMd,OAJIP,EAAKQ,eAAe,WAAoC,UAAvBR,EAAKS,SAASnB,OACjDiB,GAAU,GAGL,CACLP,OACAO,YClDEG,EAAgB,UAAM/C,uBAAN,kBAChBgD,EAAa,UAAMhD,uBAAN,cACbiD,EAAU,UAAMjD,uBAAN,aACVkD,EAAe,UAAMlD,uBAAN,kBAGfmD,EAAgC,SAACd,EAAMO,EAASQ,GACpD,OAAIR,EACK,CACLS,UAAWhB,EACXO,YAGK,EAAP,iBACGQ,EAAcf,GADjB,wBAEEO,GAFF,GADM,IAAD,GAkBIU,EAAqB,uCAAG,WAAOtC,GAAP,mBAAAe,EAAA,sEACHF,EAAQkB,EAAkB/B,GADvB,uBAC3BqB,EAD2B,EAC3BA,KAAMO,EADqB,EACrBA,QADqB,kBAG5BO,EAA8Bd,EAAMO,EAAS,iBAHjB,2CAAH,sDA0BrBW,EAAgB,uCAAG,gCAAAxB,EAAA,sEACEF,EAAQmB,GADV,uBACtBX,EADsB,EACtBA,KAAMO,EADgB,EAChBA,QADgB,kBAGvBO,EAA8Bd,EAAMO,EAAS,iBAHtB,2CAAH,qDAMhBY,EAAiB,uCAAG,WAAOxC,GAAP,mBAAAe,EAAA,sEACCF,EAAQmB,EAAehC,GADxB,uBACvBqB,EADuB,EACvBA,KAAMO,EADiB,EACjBA,QADiB,kBAGxBO,EAA8Bd,EAAMO,EAAS,aAHrB,2CAAH,sDA4BjBa,EAA4B,uCAAG,WAAOzC,GAAP,qBAAAe,EAAA,6DACpC2B,EADoC,UACxBT,EADwB,0BACIjC,GADJ,SAEVa,EAAQ6B,GAFE,uBAElCrB,EAFkC,EAElCA,KAAMO,EAF4B,EAE5BA,QAF4B,kBAInCO,EAA8Bd,EAAMO,EAAS,eAJV,2CAAH,sDAa5Be,EAAY,uCAAG,WAAOC,GAAP,mBAAA7B,EAAA,sEACMU,EAASQ,EAAYW,GAD3B,uBAClBvB,EADkB,EAClBA,KAAMO,EADY,EACZA,QADY,kBAGnBO,EAA8Bd,EAAMO,EAAS,cAH1B,2CAAH,sDAgBZiB,EAAkB,uCAAG,gCAAA9B,EAAA,sEACAF,EAAQqB,GADR,uBACxBb,EADwB,EACxBA,KAAMO,EADkB,EAClBA,QADkB,kBAGzBO,EAA8Bd,EAAMO,EAAS,oBAHpB,2CAAH,qDAMlBkB,EAAoB,uCAAG,WAAO9C,GAAP,mBAAAe,EAAA,sEACFF,EAAQqB,EAAiBlC,GADvB,uBAC1BqB,EAD0B,EAC1BA,KAAMO,EADoB,EACpBA,QADoB,kBAG3BO,EAA8Bd,EAAMO,EAAS,gBAHlB,2CAAH,sDAMpBmB,EAAiB,uCAAG,WAAOC,GAAP,mBAAAjC,EAAA,sEACCU,EAASS,EAAiBc,GAD3B,uBACvB3B,EADuB,EACvBA,KAAMO,EADiB,EACjBA,QADiB,kBAGxBO,EAA8Bd,EAAMO,EAAS,mBAHrB,2CAAH,sDC3FfqB,G,OApCK,SAACC,GACjB,IAAOC,EAAgDD,EAAhDC,cAAexC,EAAiCuC,EAAjCvC,KAAMyC,EAA2BF,EAA3BE,YAAahE,EAAc8D,EAAd9D,WACzC,EAAuCE,mBAAS,IAAhD,mBAAO+D,EAAP,KAAoBC,EAApB,KACAC,qBAAU,WACN,sBAAC,4BAAAxC,EAAA,sEACsByB,EAAkBpD,EAAW,IADnD,OACSiC,EADT,OAEGiC,EAAgBjC,EAAK5B,SAASkB,MAFjC,0CAAD,CAGGvB,MAGP,IAAMoE,EAAUC,cAMlB,OAAO,cAAC,IAAD,CAAeC,YAJA,SAACC,GACjBH,EAAQI,KAAK,gBAAkBT,IAGWtE,UAAU,cAAnD,SACL,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKE,IAAG,UAAKC,kDAAL,aAAyDC,IAAI,mBAEvE,qBAAKJ,UAAU,yBAAf,SACG8B,IAEH,sBAAK9B,UAAU,+BAAf,UACGuE,EADH,8DAIA,qBAAKvE,UAAU,4BAAf,SAEE,eAACgF,EAAA,EAAD,CAAKC,KAAK,OAAOC,MAAM,eAAvB,cAAwCV,EAAxC,gBC1BOW,EALM,SAAC,GAAoB,IAChC1D,EAD+B,EAAlB2D,aACY1D,KAAI,SAAC2D,GAAD,OAAiB,cAAC,EAAD,eAAiDA,GAA/BA,EAAYf,kBAClF,OAAO,8BAAM7C,KCmFF6D,G,OAxCY,SAACC,GACxBb,qBAAU,WACN,IAAMc,EAAO,uCAAG,4BAAAtD,EAAA,sEACO8B,IADP,OACNxB,EADM,OAEZiD,EAAmBjD,EAAKkD,iBACxBC,EAAwBnD,EAAKkD,iBAHjB,2CAAH,qDAKPE,EAAM,uCAAG,4BAAA1D,EAAA,sEACQwB,IADR,OACLlB,EADK,OAEXqD,EAAcrD,EAAKsD,cAFR,2CAAH,qDAKZN,IACAI,MACD,CAACL,IAEJ,MAA8C9E,mBAAS,IAAvD,mBAAOsF,EAAP,KAAwBN,EAAxB,KACA,EAAwDhF,mBAAS,IAAjE,mBAAOuF,EAAP,KAA6BL,EAA7B,KACA,EAAoClF,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBsF,EAAnB,KAUA,OACI,qCACI,qBAAK7F,UAAU,eAAf,SACKO,EAAW0F,OAAS,GAAK,cAAC,EAAD,CAAmB1F,WAAYA,EAAYC,eAX1D,SAAC0F,GACpB,IAAIC,EAAWJ,EACXG,EAAoBD,OAAS,GAA6B,OAAxBC,IAClCC,EAAWJ,EAAgBvE,QAAO,SAAA4E,GAAe,OAAIF,EAAoBG,SAASD,EAAgB7F,WAAW,QAEjHoF,EAAwBQ,QAQpB,qBAAKnG,UAAU,2CAAf,SACI,cAAC,EAAD,CAAcoF,aAAcY,W,0BCpD7BM,G,OAvBM,SAAC,GAAyB,IAAD,IAAvBC,oBAAuB,MAAR,GAAQ,EAEpCC,EAAcD,EAAa7E,KAAI,SAAC+E,EAAaC,GAC/C,OAAIA,IAAUH,EAAaN,OAAS,EAE5B,+BAA8BQ,EAAYE,MAA/BD,EAAME,YAGjB,cAACC,EAAA,EAAD,UACJ,cAAC,IAAD,CAAMC,GAAIL,EAAYxG,KAAtB,SAA6BwG,EAAYE,QADhBD,EAAME,eAKvC,OACI,eAACG,EAAA,EAAD,CAAY,aAAW,kBAAvB,UACI,cAACF,EAAA,EAAD,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEHN,O,mGCbPQ,GAAmB,SAACC,GACtB,OAAOA,EAAiB,CACpBnF,KAAMmF,EAAeC,UAAUD,EAAeE,YAAY,KAAO,EAAGF,EAAeE,YAAY,MAC/FF,kBACA,CACAnF,KAAM,GACNmF,eAAgB,KAIlBG,GAAa,SAAC,GAAgB,IAC1BC,EADyB,EAAdC,SACS5F,KAAI,SAAA6F,GAAM,OAAIA,EAAON,kBAAgBvF,IAAIsF,IAAkBtF,KAAI,SAAC8F,EAAcd,GAAf,OACrF,6BAA2B,cAAC1B,EAAA,EAAD,UAAK,mBAAG/E,KAAMuH,EAAaP,eACnBQ,OAAQ,OADX,SACoBD,EAAa1F,UADxD4E,EAAME,eAGnB,OAAQ,kDAEJ,6BAAKS,QA+CEK,GAzCgB,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,4BAAyD,IAA5BC,yBAA4B,MAAR,GAAQ,EAEtF,EAAoCnH,mBAASmH,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BrH,mBAAS,IAAvC,mBAAOsH,EAAP,KAAgBC,EAAhB,KA2BA,OACI,qCACI,cAACC,GAAA,EAAD,aAAW/G,MAAO6G,EAAS9G,SA3BX,SAACyB,GACrB,IAAMxB,EAAQwB,EAAE+E,OAAOvG,MACvB8G,EAAW9G,KAkBQ,CACnBC,GAAI,SACJU,UAAW,oBAMP,cAACqG,GAAA,EAAD,CAAQC,QAvBI,SAACzF,GACjB,GAAgB,KAAZqF,EAAJ,CACA,IAAIK,EAAa,uBAAOP,GAAP,CAAmB,CAChC/F,KAAMkF,GAAiBe,GAASjG,KAChCyC,YAAawD,EACbd,eAAgBc,EAChBM,aAAc,GACdjD,aAAc,MAElB0C,EAAcM,GACdT,EAA4BS,GAC5BJ,EAAW,MAYuBM,WAAYC,KAA1C,iBACA,cAAC,GAAD,CAAYjB,SAAUO,QC2HnBW,GA7KQ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACrB,EAAoChI,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBsF,EAAnB,KACA,EAA4CpF,mBAAS,CACjDqB,KAAM,GACNyC,YAAa,GACbmE,iBAAkB,GAClBC,iBAAkB,GAClBC,OAAQ,GACRtB,SAAU,GACV/G,WAAY,KAPhB,mBAAOsI,EAAP,KAAuBC,EAAvB,KAUMC,EAAuB,SAACC,EAAO9H,GACjC,IAAM+H,EAAM,eACLJ,GAEPI,EAAOD,GAAS9H,EAChB4H,EAAkBG,GAClBR,EAAaQ,IAGjBvE,qBAAU,WACN,IAAIwE,GAAY,EAQhB,OAPU,uCAAG,4BAAAhH,EAAA,sEACSwB,IADT,OACHnB,EADG,OAEL2G,GACArD,EAActD,EAAIuD,cAHb,2CAAH,oDAMVhF,GACO,WAAQoI,GAAY,KAE5B,IAEH,IAAIC,EAAuB5I,EAAWmB,KAAI,SAACd,GACvC,OACI,cAACwI,GAAA,EAAD,CAEIlI,MAAON,EAASC,WAChBwI,KAAMzI,EAASkB,MAFVlB,EAASC,eAM1BsI,EAAqBG,QACjB,cAACF,GAAA,EAAD,CAEIG,UAAQ,EACRC,QAAM,EACNtI,MAAM,mBACNmI,KAAK,oBAJD,OASZ,IAMMI,EAAqB,CACvB,cAACL,GAAA,EAAD,CAEIG,UAAQ,EACRC,QAAM,EACNtI,MAAM,mBACNmI,KAAK,oBAJD,MAMR,cAACD,GAAA,EAAD,CAAoBlI,MAAM,gBAAgBmI,KAAK,iBAA/B,KAChB,cAACD,GAAA,EAAD,CAAoBlI,MAAM,YAAYmI,KAAK,aAA3B,MAmFpB,OAFAK,QAAQC,IAAI,MAAOd,GAGf,mCACI,eAACe,EAAA,EAAD,WACI,cAACC,GAAA,EAAD,2BAhD6B,CACrCC,WAAY,kBA+CJ,aACI,cAACC,GAAA,EAAD,aAAc9I,SA7CF,SAACyB,GACzBqG,EAAqB,mBAAoBrG,EAAE+E,OAAOvG,SAZrB,CAC7BC,GAAI,SACJ6I,YAAa,YACbC,iBACI,4FAsDI,cAAChC,GAAA,EAAD,aAAWhH,SA3CG,SAACyB,GACvBqG,EAAqB,OAAQrG,EAAE+E,OAAOvG,SAtCd,CACxBC,GAAI,OACJU,UAAW,UA+EH,cAACqI,GAAA,EAAD,yBAAQjJ,SAxCU,SAACyB,GAC3BqG,EAAqB,aAAc,CAACrG,EAAE+E,OAAOvG,UAlEpB,CACzBC,GAAI,WACJgJ,aAAc,mBACdtI,UAAW,aAsGH,aAAoEsH,KACpE,cAAClB,GAAA,EAAD,aAAWhH,SArCY,SAACyB,GAChCqG,EAAqB,mBAAoBrG,EAAE+E,OAAOvG,SAzCjB,CACjCC,GAAI,gBACJU,UAAW,2BA4EH,cAACoG,GAAA,EAAD,aAAWhH,SAlCM,SAACyB,MAvCC,CAC3BvB,GAAI,UACJU,UAAW,aAwEH,cAACqI,GAAA,EAAD,yBAAQjJ,SAxBQ,SAACyB,GACzBqG,EAAqB,SAAUrG,EAAE+E,OAAOvG,SAnEjB,CACvBC,GAAI,SACJgJ,aAAc,mBACdtI,UAAW,WAuFH,aAAgE4H,KAChE,cAACW,GAAA,EAAD,aAAUnJ,SArBW,SAACyB,GAC9BqG,EAAqB,cAAerG,EAAE+E,OAAOvG,SAlDf,CAC9BC,GAAI,cACJU,UAAW,cACXwI,KAAM,GACNC,KAAM,KAmEE,cAAC,GAAD,CAAwB3C,4BAlBA,SAACS,GACjCW,EAAqB,WAAYX,YCjK5BmC,GAAyB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAG9BC,EAAoB,SAAC,GAGO,IAFaC,EAEd,EAFFC,eACUC,EACR,EADFtD,SAE3B,EAAwB7G,oBAAS,GAAjC,mBAAOoK,EAAP,KAAaC,EAAb,KACA,EAA8BrK,oBAAW,IAAIsK,MAAQC,UAAWpE,YAAhE,mBAAOqE,EAAP,KAAgBC,EAAhB,KACA,EAA4CzK,mBAAS,IAArD,mBAAOoI,EAAP,KAAuBC,EAAvB,KAeMqC,EAAY,WACdD,GAAa,IAAIH,MAAQC,UAAWpE,aA2BxC,OACI,qCACMgE,GAAoC,qBAAbQ,SAEnBC,IAASC,aACP,cAACV,EAAD,CAAcC,KAAMA,EAAMU,eA1CnB,SAAC7I,GACpBoI,GAAQ,GACRK,KAwCsE1C,aA9CrD,SAACI,GAClBC,EAAkBD,IA6CgF2C,gBA7B9E,SAAC9I,GACrBA,EAAE+I,iBACF,sBAAC,kCAAAvJ,EAAA,yDAEOwJ,EAAc,IACf7C,EAAevB,WAAYuB,EAAevB,SAASrB,OAHzD,gCAI6B0F,QAAQC,IAAI/C,EAAevB,SAAS5F,IAAIoC,IAJrE,OAIW+H,EAJX,OAKOnC,QAAQC,IAAI,YAAakC,GACzBH,EAAcG,EAAUnK,KAAI,SAAAa,GAAG,OAAIA,EAAIuJ,UAAUtJ,KAAKuJ,YAN7D,cAQGrC,QAAQC,IAAI,cAAe+B,GACrBM,EATT,2BAUUnD,GAVV,IAWOvB,SAAUoE,IAXjB,UAaqBxH,EAAkB8H,GAbvC,QAaSzJ,EAbT,OAcGmH,QAAQC,IAAI,oBAAqBpH,GACjCuG,EAAkBkD,GAClBb,IACAX,IAjBH,2CAAD,IA2BoIS,QAASA,IACjIG,SAASa,MAHX,KAKLvB,GAAmB,cAACA,EAAD,CAAiBwB,cAxCvB,SAACxJ,GACnBoI,GAAQ,UAgDhB,OACI,cAACL,EAAD,CACIE,eAAgB,gBAAEuB,EAAF,EAAEA,cAAF,OACZ,cAAChE,GAAA,EAAD,CAAQC,QAAS+D,EAAe5D,WAAYC,KAA5C,kBAFR,SAIK,gBAAEsC,EAAF,EAAEA,KAAMU,EAAR,EAAQA,eAAgB9C,EAAxB,EAAwBA,aAAc+C,EAAtC,EAAsCA,gBAAiBP,EAAvD,EAAuDA,QAAvD,OACG,cAACkB,GAAA,EAAD,CACIC,WAAW,MACXC,kBAAkB,MAClBC,oBAAoB,SACpBzB,KAAMA,EACNU,eAAgBA,EAChBC,gBAAiBA,EANrB,SAOI,cAAC,GAAD,CAA8B/C,aAAcA,GAAvBwC,SCvC1BsB,I,OAzCK,WAChB,MAAsC9L,oBAAW,IAAIsK,MAAQC,UAAWpE,YAAxE,mBAAOrB,EAAP,KAAoBiH,EAApB,KAMA,OACI,qCACI,cAAC,EAAD,IACA,cAAC5C,EAAA,EAAD,CAAS5J,UAAU,cAAnB,SACI,sBAAKA,UAAU,6CAAf,UACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,uCAAf,SACI,cAAC,EAAD,QAGR,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,mCAAf,wBAGA,qBAAKA,UAAU,mCAAf,qBAGA,qBAAKA,UAAU,mCAAf,SACI,cAAC,GAAD,CAAwBwK,YAtB5B,WAChBgC,GAAiB,IAAIzB,MAAQC,UAAWpE,iBAuBxB,qBAAK5G,UAAU,mCAAf,uBAIJ,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,CAAoBuF,YAAaA,WAIhD,cAAC,EAAD,S,8BC5BMkH,I,OAdmB,WAChC,OACI,mCACE,wBAAQzM,UAAU,oBAAlB,SACI,qBAAKA,UAAU,+BAAf,SACA,mBAAGC,KAAK,gBAAgBD,UAAU,yBAAlC,SACI,qBAAKE,IAAG,UAAKC,kDAAL,aAAyDC,IAAI,2B,UCL/EsM,GAAmB,SAAC,GAA6B,IAA5BrH,EAA2B,EAA3BA,YAAaiC,EAAc,EAAdA,SACpCoC,QAAQC,IAAI,mBAAmBtE,GAC/B,IAAMgC,EAAWC,EAAS5F,KAAI,SAAC6F,EAAQb,GAAT,OAC1B,cAACiG,GAAA,EAAD,CAAoC1H,KAAK,QAAQ2H,SAAS,sBAA1D,2CACgCrF,EAAON,eADvC,4CAAkBP,EAAME,eAK5B,OACI,8CACgBvB,EAAYvD,KAD5B,IAEKuF,MAMAwF,GAA0B,SAACC,GACpCpD,QAAQC,IAAImD,EAAMzH,aAClB,IAAMoF,EAAoB,SAAC,GAGO,IAFaC,EAEd,EAFFC,eACUC,EACR,EADFtD,SAE3B,EAAwB7G,oBAAS,GAAjC,mBAAOoK,EAAP,KAAaC,EAAb,KACA,EAAsBrK,mBAASqM,EAAMzH,aAA9BA,EAAP,oBACA,EAAmB5E,mBAASqM,EAAMxF,UAA3BA,EAAP,oBAUA,OACI,qCACMsD,GAAoC,qBAAbQ,SAEnBC,IAASC,aACP,cAACV,EAAD,CAAcC,KAAMA,EAAMU,eAbnB,SAAC7I,GACpBoI,GAAQ,IAY8DzF,YAAaA,EAAaiC,SAAUA,IAC9F8D,SAASa,MAHX,KAKLvB,GAAmB,cAACA,EAAD,CAAiBwB,cAZvB,SAACxJ,GACnBoI,GAAQ,UAiBhB,OACI,cAACL,EAAD,CACIE,eAAgB,gBAAEuB,EAAF,EAAEA,cAAF,OACZ,cAAChE,GAAA,EAAD,CAAQC,QAAS+D,EAAjB,sBAFR,SAIK,gBAAErB,EAAF,EAAEA,KAAMU,EAAR,EAAQA,eAAgBlG,EAAxB,EAAwBA,YAAaiC,EAArC,EAAqCA,SAArC,OACG,cAAC6E,GAAA,EAAD,CACIC,WAAY,WAAW/G,EAAYvD,KACnCiL,cAAY,EACZlC,KAAMA,EACNU,eAAgBA,EAJpB,SAKI,cAAC,GAAD,CAAkBlG,YAAaA,EAAaiC,SAAUA,UCiHpEF,I,OAAa,SAAC,GAId,IACEC,EADH,EAFCC,SAGsB5F,KAAI,SAAC6F,EAAQb,GAAT,OAC1B,6BAA2B,mBAAGzG,KAAMsH,EAAON,eACbQ,OAAQ,OADX,SACoBF,EAAOzF,QAD7C4E,EAAME,eAGnB,OACI,sBAAK5G,UAAU,+BAAf,UACE,qBAAKA,UAAU,uBAAf,6BAGA,6BAAKqH,SAME2F,GAvJS,WACtB,MAAsCvM,mBAAS,IAA/C,mBAAO4E,EAAP,KAAoB4H,EAApB,KACA,EAAwCxM,mBAAS,MAAjD,mBAAOyM,EAAP,KAAqBC,EAArB,KACA,EAAgC1M,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBwM,EAAjB,KACA,EAAgC3M,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiB+F,EAAjB,KACW/I,EAAiBgJ,cAArBnM,GAwBP,OArBAuD,qBAAU,YACE,uCAAG,4BAAAxC,EAAA,sEACuB+B,EAC9BK,GAFO,UACLiJ,EADK,OAESlI,YAFT,KAGX8H,GACII,EAAmBC,eAJZ,iCAIoC/J,EACvC8J,EAAmBC,gBALhB,mBAKiCN,aALjC,6BAKgD,KALhD,yCAMXE,IACIG,EAAmBhN,YAAcgN,EAAmBhN,WAAW0F,OAC7D,GARK,kCAQMtC,EACT4J,EAAmBhN,WAAW,IAT3B,oBASgCK,SAThC,6BAS2C,KAT3C,yCAUXyM,IACIE,EAAmBjG,UAAYiG,EAAmBjG,SAASrB,OAAS,GAX7D,kCAYMrC,EAA6BU,GAZnC,oBAYmDuD,WAZnD,6BAaD,GAbC,iCAcXoF,EAAeM,GAdJ,4CAAH,qDAiBVzM,KACC,CAACwD,IAGA,qCACE,cAAC,GAAD,IACA,eAACsF,EAAA,EAAD,CAAS5J,UAAU,kBAAnB,UACE,cAACyN,GAAA,EAAD,CAAKzN,UAAU,qDAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,2CAAf,SACE,cAAC,EAAD,CAAcuG,aAAc,CAAC,CAC3BI,KAAMtB,EAAYvD,KAClB7B,KAAMyN,OAAOC,SAAS1N,eAK9B,cAAC2N,GAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACJ,GAAA,EAAD,WACE,cAACK,GAAA,EAAD,CAAQC,GAAI,EAAZ,SACE,eAAChM,EAAA,EAAD,WACE,sBAAK/B,UAAU,wBAAf,UACE,qBAAKE,IAAG,UAAKC,kDAAL,kBAA8DC,IAAI,iBAEzEiF,GAAeA,EAAY2I,+BAE9B,cAAC,GAAD,CAAyB3I,YAAaA,EACbiC,SAAUA,IACnC,sBAAKtH,UAAU,8BAAf,wBAEE,sDAEF,uBACA,sBAAKA,UAAU,uBAAf,mCACwB,uBACtB,mBAAGC,KAAMoF,GACNA,EAAYsD,iBACZlB,OAAO,OAFV,8BAIF,uBACA,8BACGH,GAAY,cAAC,GAAD,CAAYA,SAAUA,WAIzC,cAACwG,GAAA,EAAD,CAAQC,GAAI,GAAZ,SACE,eAAChM,EAAA,EAAD,WACE,mBAAG/B,UAAU,wBAAb,SACGqF,GAAeA,EAAYvD,OAG9B,sBAAK9B,UAAU,uBAAf,UACE,eAAC8N,GAAA,EAAD,CAAQ9N,UAAU,wBAAlB,oBAEE,yCAGF,eAAC8N,GAAA,EAAD,CAAQ9N,UAAU,wBAAlB,qBAEE,4BAAIY,GAAYA,EAASkB,UAG3B,eAACgM,GAAA,EAAD,CAAQ9N,UAAU,wBAAlB,yBAEE,4BAAIkN,GAAgBA,EAAapL,aAKrC,qBAAK9B,UAAU,8BAAf,SACGqF,GAAeA,EAAYd,cAE9B,qBAAIvE,UAAU,6BAAd,UACE,6BACE,qBAAKE,IAAG,UAAKC,kDAAL,iBAA6DC,IAAI,mBAE3E,6BACE,qBAAKF,IAAG,UAAKC,kDAAL,iBAA6DC,IAAI,mCAQvF,cAAC,EAAD,QC5IO6N,OAVf,WACI,OACI,eAAC,IAAD,WACQ,cAAC,IAAD,CAAOC,OAAK,EAACvH,KAAK,IAAIwH,UAAW5B,KACjC,cAAC,IAAD,CAAO2B,OAAK,EAACvH,KAAK,mBAAmBwH,UAAWnB,KAChD,cAAC,IAAD,CAAOrG,KAAK,WAAWwH,UAAW3F,SCN5C4F,G,uKACJ,WACEC,KAAKC,WAAalD,SAASmD,cAAc,QACzClD,IAASmD,OAAO,cAAC,IAAMC,WAAP,UACV,cAAC,IAAD,UACE,cAAC,GAAD,QAGJJ,KAAKK,YAAYL,KAAKC,aAC1BD,KAAKK,YAAYL,KAAKC,gB,eATLK,cAYrBC,eAAeC,OAAO,WAAYT,K","file":"static/js/main.ff7a06b0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Login = () => {\r\n    return <div>LOGIN COMPONENT</div>\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Login from \"../../../components/Login/Login\";\r\nimport './catalog-page-header.scss';\r\n\r\nconst CatalogPageHeader = () => {\r\n  return (\r\n      <>\r\n        <header className=\"CatalogPageHeader\">\r\n            <div className=\"CatalogPageHeader-header-top\">\r\n            <a href=\"#root-to-home\" className=\"CatalogPageHeader-logo\">\r\n              <img src={`${process.env.REACT_APP_PUBLIC_ASSETS_URL}/Logo.png`} alt=\"Entando logo\" />\r\n            </a>\r\n            <div className=\"CatalogPageHeader-header-right\">\r\n              <Login/>\r\n            </div>\r\n            </div>\r\n            <div className=\"CatalogPageHeader-header-bottom\">\r\n              <div className=\"CatalogPageHeader-header-content\">\r\n                <h2>Welcome to Entando Hub</h2>\r\n                Entando exists to help you build better apps faster by providing an\r\n                Application Composition Platform for building enterprise apps on\r\n                Kubernetes. We also have a growing hub of ready-to-use solutions to\r\n                accelerate your development process further.\r\n                You can take these solutions to use as-is, utilize them as a\r\n                reference, or fork them to use as a base for your own custom\r\n                solution.\r\n              </div>\r\n            </div>\r\n        </header>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default CatalogPageHeader;\r\n","import React from 'react';\r\nimport Login from \"../../../components/Login/Login\";\r\nimport './catalog-page-footer.scss';\r\n\r\nconst CatalogPageFooter = () => {\r\n  return (\r\n      <>\r\n        <header className=\"CatalogPageFooter\">\r\n          <div className=\"CatalogPageFooter-copyright\">\r\n            Copyright 2021 Entando\r\n          </div>\r\n        </header>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default CatalogPageFooter;\r\n","import React, {useState} from 'react';\r\nimport {Checkbox, Tile} from \"carbon-components-react\";\r\n\r\nimport './catalog-filter-tile.scss';\r\n\r\n/**\r\n * renders a list of categories\r\n */\r\nconst CatalogFilterTile = ({categories, onFilterChange}) => {\r\n    const init = ()=>{\r\n        let checkBoxInitialStatuses = {}\r\n        categories.forEach((category) => {\r\n            checkBoxInitialStatuses[category.categoryId] = false\r\n        })\r\n        checkBoxInitialStatuses[\"-1\"] = true\r\n        return checkBoxInitialStatuses\r\n    }\r\n\r\n    let [checkboxStatuses, setCheckboxStatuses] = useState(init())\r\n\r\n    const onChange = (value, id, event) => {\r\n        if (id === \"-1\") {\r\n            //all clicked\r\n            Object.keys(checkboxStatuses).forEach((key) => checkboxStatuses[key] = (value === true))\r\n        }else{\r\n            checkboxStatuses[id] = value\r\n            checkboxStatuses[\"-1\"] = false\r\n\r\n        }\r\n        setCheckboxStatuses(checkboxStatuses)\r\n        onFilterChange(Object.keys(checkboxStatuses).filter(key => (key!==\"-1\" && checkboxStatuses[key])))\r\n    }\r\n    const prefix = \"catalog-filter\";\r\n    const listItems = categories.map((category) => <Checkbox checked={checkboxStatuses[category.categoryId]} onChange={onChange} key={category.categoryId}\r\n                                                             labelText={category.name} id={category.categoryId}/>)\r\n    return (\r\n        <Tile>\r\n            <fieldset className={`${prefix}--fieldset`}>\r\n                <Checkbox checked={checkboxStatuses[\"-1\"]} onChange={onChange} key={\"-1\"} labelText={\"All\"}\r\n                          id={\"-1\"}/>\r\n                {listItems}\r\n            </fieldset>\r\n        </Tile>\r\n    )\r\n}\r\n\r\nexport default CatalogFilterTile;\r\n","import axios from \"axios\";\r\n\r\n// retrieves the data (organisations, categories, bundles and bundles group) from the BE. If an ID is provided it retrieves a single element (the one with the same ID)\r\nexport const getData = async (url, id) => {\r\n  url = mergeUrl(url, id);\r\n\r\n  const data = await axios\r\n    .get(url)\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .catch((e) => {\r\n      return e;\r\n    });\r\n\r\n  return errorCheck(data);\r\n};\r\n\r\n// creates a new record of any type (organisation, category, bundle or bundle group). If an ID is provided it modifies the record with the same ID\r\nexport const postData = async (url, payload, id) => {\r\n  url = mergeUrl(url, id);\r\n\r\n  const data = await axios\r\n    .post(url, payload)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((e) => {\r\n      return e;\r\n    });\r\n\r\n  return errorCheck(data);\r\n};\r\n\r\n// if an ID is present, it modifies the url by merging it with the ID\r\nconst mergeUrl = (url, id) => {\r\n  if (id) {\r\n    url = `${url}${id}`;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n// checks if the input data is an error and returns the data enhanced with a boolean\r\nconst errorCheck = (data) => {\r\n  let isError = false;\r\n  \r\n  if (data.hasOwnProperty('toJSON') && data.toJSON().name === \"Error\") {\r\n    isError = true;\r\n  } \r\n  \r\n  return {\r\n    data,\r\n    isError\r\n  }\r\n};","import { getData, postData } from \"./Http\";\r\n\r\n// endpoints\r\nconst urlOrganisations = `${process.env.REACT_APP_PUBLIC_API_URL}/organisation/`;\r\nconst urlCategories = `${process.env.REACT_APP_PUBLIC_API_URL}/category/`;\r\nconst urlBundles = `${process.env.REACT_APP_PUBLIC_API_URL}/bundles/`;\r\nconst urlBundleGroups = `${process.env.REACT_APP_PUBLIC_API_URL}/bundlegroups/`;\r\n\r\n// checks if the input data contain an error and sends back either the error itself or the actual data\r\nconst checkForErrorsAndSendResponse = (data, isError, objectLabel) => {\r\n  if (isError) {\r\n    return {\r\n      errorBody: data,\r\n      isError,\r\n    };\r\n  } else {\r\n    return {\r\n      [objectLabel]: data,\r\n      isError,\r\n    };\r\n  }\r\n};\r\n\r\n/*********************\r\n * ORGANISATIONS *****\r\n *********************/\r\n\r\nexport const getAllOrganisations = async () => {\r\n  const { data, isError } = await getData(urlOrganisations);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"organisationList\");\r\n};\r\n\r\nexport const getSingleOrganisation = async (id) => {\r\n  const { data, isError } = await getData(urlOrganisations, id);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"organisation\");\r\n};\r\n\r\nexport const addNewOrganisation = async (organisationData) => {\r\n  const { data, isError } = await postData(urlOrganisations, organisationData);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"newOrganisation\");\r\n};\r\n\r\nexport const editOrganisation = async (organisationData, id) => {\r\n  const { data, isError } = await postData(\r\n    urlOrganisations,\r\n    organisationData,\r\n    id\r\n  );\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"editedOrganisation\");\r\n};\r\n\r\n/*********************\r\n * CATEGORIES ********\r\n *********************/\r\n\r\nexport const getAllCategories = async () => {\r\n  const { data, isError } = await getData(urlCategories);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"categoryList\");\r\n};\r\n\r\nexport const getSingleCategory = async (id) => {\r\n  const { data, isError } = await getData(urlCategories, id);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"category\");\r\n};\r\n\r\nexport const addNewCategory = async (categoryData) => {\r\n  const { data, isError } = await postData(urlCategories, categoryData);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"newCategory\");\r\n};\r\n\r\nexport const editCategory = async (categoryData, id) => {\r\n  const { data, isError } = await postData(urlCategories, categoryData, id);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"editedCategory\");\r\n};\r\n\r\n/*********************\r\n * BUNDLES ***********\r\n *********************/\r\n\r\nexport const getAllBundles = async () => {\r\n  const { data, isError } = await getData(urlBundles);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"bundleList\");\r\n};\r\n\r\nexport const getAllBundlesForABundleGroup = async (id) => {\r\n  const newUrl = `${urlBundles}?bundleGroupId=${id}`;\r\n  const { data, isError } = await getData(newUrl);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"bundleList\");\r\n};\r\n\r\nexport const getSingleBundle = async (id) => {\r\n  const { data, isError } = await getData(urlBundles, id);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"bundleGroup\");\r\n};\r\n\r\nexport const addNewBundle = async (bundleData) => {\r\n  const { data, isError } = await postData(urlBundles, bundleData);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"newBundle\");\r\n};\r\n\r\nexport const editBundle = async (bundleData, id) => {\r\n  const { data, isError } = await postData(urlBundles, bundleData, id);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"editedBundle\");\r\n};\r\n\r\n/*********************\r\n * BUNDLE GROUPS *****\r\n *********************/\r\n\r\nexport const getAllBundleGroups = async () => {\r\n  const { data, isError } = await getData(urlBundleGroups);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"bundleGroupList\");\r\n};\r\n\r\nexport const getSingleBundleGroup = async (id) => {\r\n  const { data, isError } = await getData(urlBundleGroups, id);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"bundleGroup\");\r\n};\r\n\r\nexport const addNewBundleGroup = async (bundleGroupData) => {\r\n  const { data, isError } = await postData(urlBundleGroups, bundleGroupData);\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"newBundleGroup\");\r\n};\r\n\r\nexport const editBundleGroup = async (bundleGroupData, id) => {\r\n  const { data, isError } = await postData(\r\n    urlBundleGroups,\r\n    bundleGroupData,\r\n    id\r\n  );\r\n\r\n  return checkForErrorsAndSendResponse(data, isError, \"editedBundleGroup\");\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {ClickableTile, Tag} from \"carbon-components-react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSingleCategory} from \"../../../integration/Integration\";\r\n\r\nimport \"./catalog-tile.scss\"\r\n\r\nconst CatalogTile = (CatalogTileProps) => {\r\n    const {bundleGroupId, name, description, categories} = CatalogTileProps\r\n    const [categoryName,setCategoryName] = useState(\"\")\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            const data = await getSingleCategory(categories[0])\r\n            setCategoryName(data.category.name)\r\n        })(categories)\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    const handleClick = (evt) => {\r\n        history.push(\"/bundlegroup/\" + bundleGroupId)\r\n    }\r\n\r\n  return <ClickableTile handleClick={handleClick} className=\"CatalogTile\">\r\n    <div className=\"CatalogTile-card-wrapper\">\r\n      <div className=\"CatalogTile-card-icon\">\r\n        <img src={`${process.env.REACT_APP_PUBLIC_ASSETS_URL}/icon.svg`} alt=\"Entando logo\"/>\r\n      </div>\r\n      <div className=\"CatalogTile-card-title\">\r\n        {name}\r\n      </div>\r\n      <div className=\"CatalogTile-card-description\">\r\n        {description}\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n      </div>\r\n      <div className=\"CatalogTile-card-category\">\r\n        {/*tag list*/}\r\n        <Tag type=\"blue\" title=\"Clear Filter\"> {categoryName} </Tag>\r\n      </div>\r\n    </div>\r\n  </ClickableTile>\r\n}\r\n\r\nexport default CatalogTile;\r\n","import React from 'react';\r\nimport CatalogTile from \"../catalog-tile/CatalogTile\";\r\n\r\n/**\r\n * renders a list of bundleGroup\r\n */\r\nconst CatalogTiles = ({bundleGroups}) => {\r\n    const listItems = bundleGroups.map((bundleGroup) => <CatalogTile key={bundleGroup.bundleGroupId} {...bundleGroup}/>);\r\n    return <div>{listItems}</div>\r\n}\r\n\r\nexport default CatalogTiles;\r\n","import React, {useEffect, useState} from 'react';\r\nimport CatalogFilterTile from \"../catalog-filter-tile/CatalogFilterTile\";\r\nimport CatalogTiles from \"../catalog-tiles/CatalogTiles\";\r\nimport {getAllBundleGroups, getAllCategories} from \"../../../integration/Integration\";\r\n\r\nimport \"./catalog-page-content.scss\"\r\n\r\n/*\r\nconst categories = Array.from(Array(3).keys()).map(index => {\r\n    return {name: \"name\" + index, categoryId: \"\" + index};\r\n})\r\n*/\r\n\r\n/*\r\n{\r\nname\tstring\r\ndescription\tstring\r\nbundleGroups\t[...]\r\ncategoryId\tstring\r\n}\r\n */\r\n\r\n/*\r\nBUNDLEGROUP:\r\n{\r\nname\tstring\r\ndescription\tstring\r\ndescriptionImage\tstring\r\ndocumentationUrl\tstring\r\nstatus\tstring\r\nEnum:\r\nArray [ 2 ]\r\nchildren\t[...]\r\norganisationId\tstring\r\ncategories\t[...]\r\nbundleGroupId\tstring\r\n}\r\n */\r\n/*\r\nconst allBundleGroups = Array.from(Array(10).keys()).map(index => {\r\n    return {\r\n        bundleGroupId: \"\" + index,\r\n        name: \"name\" + index,\r\n        description: \"description\" + index,\r\n        categories: [\"\" + categories[Math.floor(Math.random() * categories.length)].id],\r\n        image: \"image\" + index\r\n    };\r\n})\r\n*/\r\n\r\n\r\nconst CatalogPageContent = (reloadToken) => {\r\n    useEffect(() => {\r\n        const initBGs = async () => {\r\n            const data = await getAllBundleGroups()\r\n            setAllBundleGroups(data.bundleGroupList)\r\n            setFilteredBundleGroups(data.bundleGroupList)\r\n        }\r\n        const initCs = async () => {\r\n            const data = await getAllCategories()\r\n            setCategories(data.categoryList)\r\n        }\r\n\r\n        initBGs()\r\n        initCs()\r\n    }, [reloadToken])\r\n\r\n    const [allBundleGroups, setAllBundleGroups] = useState([])\r\n    const [filteredBundleGroups, setFilteredBundleGroups] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const onFilterChange = (selectedCategoryIds) => {\r\n        let filtered = allBundleGroups\r\n        if (selectedCategoryIds.length > 0 && selectedCategoryIds !== \"-1\") {\r\n            filtered = allBundleGroups.filter(currBundleGroup => selectedCategoryIds.includes(currBundleGroup.categories[0]));\r\n        }\r\n        setFilteredBundleGroups(filtered)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bx--col-lg-4\">\r\n                {categories.length > 0 && <CatalogFilterTile categories={categories} onFilterChange={onFilterChange}/>}\r\n            </div>\r\n            <div className=\"bx--col-lg-12 CatalogPageContent-wrapper\">\r\n                <CatalogTiles bundleGroups={filteredBundleGroups}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CatalogPageContent;\r\n","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from \"carbon-components-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './eh-bredcrumb.scss';\r\n/*\r\n{\r\npath,\r\nhref\r\n}\r\n */\r\nconst EhBreadcrumb = ({pathElements = []}) => {\r\n\r\n    const elementList = pathElements.map((pathElement, index) => {\r\n        if (index === pathElements.length - 1) {\r\n            return (\r\n                <span key={index.toString()}>{pathElement.path}</span>\r\n            )\r\n        }\r\n        return (<BreadcrumbItem key={index.toString()}>\r\n            <Link to={pathElement.href}>{pathElement.path}</Link>\r\n        </BreadcrumbItem>)\r\n    })\r\n\r\n    return (\r\n        <Breadcrumb aria-label=\"Page navigation\">\r\n            <BreadcrumbItem>\r\n                <Link to=\"/\">Home</Link>\r\n            </BreadcrumbItem>\r\n            {elementList}\r\n        </Breadcrumb>\r\n    )\r\n}\r\n\r\nexport default EhBreadcrumb;\r\n","import {useState} from \"react\";\r\nimport {Button, Tag, TextInput,} from \"carbon-components-react\";\r\nimport {Add16} from '@carbon/icons-react';\r\n\r\n/*\r\nBUNDLE:\r\n{\r\nname\tstring\r\ndescription\tstring\r\ngitRepoAddress\tstring\r\ndependencies\t[...]\r\nbundleGroups\t[...]\r\nbundleId\tstring\r\n} */\r\n\r\nconst parseGitRepoAddr = (gitRepoAddress) => {\r\n    return gitRepoAddress ? {\r\n        name: gitRepoAddress.substring(gitRepoAddress.lastIndexOf(\"/\") + 1, gitRepoAddress.lastIndexOf(\".\")),\r\n        gitRepoAddress\r\n    } : {\r\n        name: \"\",\r\n        gitRepoAddress: \"\"\r\n    }\r\n}\r\n\r\nconst BundleList = ({children}) => {\r\n    const elemList = children.map(bundle => bundle.gitRepoAddress).map(parseGitRepoAddr).map((childrenInfo, index) =>\r\n        <li key={index.toString()}><Tag><a href={childrenInfo.gitRepoAddress}\r\n                                           target={\"_new\"}>{childrenInfo.name}</a></Tag></li>)\r\n\r\n    return (<div>\r\n        List of Bundles\r\n        <ul>{elemList}</ul>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\nconst AddBundleToBundleGroup = ({onAddOrRemoveBundleFromList, initialBundleList = []}) => {\r\n\r\n    const [bundleList, setBundleList] = useState(initialBundleList)\r\n    const [gitRepo, setGitRepo] = useState(\"\")\r\n\r\n    const onChangeHandler = (e) => {\r\n        const value = e.target.value;\r\n        setGitRepo(value)\r\n    }\r\n\r\n    const onAddBundle = (e) => {\r\n        if (gitRepo === \"\") return\r\n        let newBundleList = [...bundleList, {\r\n            name: parseGitRepoAddr(gitRepo).name,\r\n            description: gitRepo,\r\n            gitRepoAddress: gitRepo,\r\n            dependencies: [],\r\n            bundleGroups: []\r\n        }];\r\n        setBundleList(newBundleList)\r\n        onAddOrRemoveBundleFromList(newBundleList)\r\n        setGitRepo(\"\")\r\n    }\r\n\r\n\r\n    const textInputProps = {\r\n        id: \"bundle\",\r\n        labelText: \"Add Url Bundle\",\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TextInput value={gitRepo} onChange={onChangeHandler} {...textInputProps} />\r\n            <Button onClick={onAddBundle} renderIcon={Add16}>Add</Button>\r\n            <BundleList children={bundleList}/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AddBundleToBundleGroup;\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport {Content, FileUploader, FormGroup, Select, SelectItem, TextArea, TextInput,} from \"carbon-components-react\";\r\nimport {getAllCategories} from \"../../../../integration/Integration\";\r\nimport AddBundleToBundleGroup from \"./add-bundle-to-bundle-group/AddBundleToBundleGroup\";\r\n\r\n/*\r\nBUNDLEGROUP:\r\n{\r\nname\tstring\r\ndescription\tstring\r\ndescriptionImage\tstring\r\ndocumentationUrl\tstring\r\nstatus\tstring\r\nEnum:\r\nArray [ 2 ]\r\nchildren\t[...]\r\norganisationId\tstring\r\ncategories\t[...]\r\nbundleGroupId\tstring\r\n}\r\n */\r\n\r\nconst NewBundleGroup = ({onDataChange}) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [newBundleGroup, setNewBundleGroup] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        descriptionImage: \"\",\r\n        documentationUrl: \"\",\r\n        status: \"\",\r\n        children: [],\r\n        categories: [],\r\n    });\r\n\r\n    const changeNewBundleGroup = (field, value) => {\r\n        const newObj = {\r\n            ...newBundleGroup,\r\n        }\r\n        newObj[field] = value\r\n        setNewBundleGroup(newObj)\r\n        onDataChange(newObj)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const init = async () => {\r\n            const res = await getAllCategories();\r\n            if (isMounted) {\r\n                setCategories(res.categoryList);\r\n            }\r\n        };\r\n        init();\r\n        return () => { isMounted = false }\r\n\r\n    }, []);\r\n\r\n    let selectItems_Category = categories.map((category) => {\r\n        return (\r\n            <SelectItem\r\n                key={category.categoryId}\r\n                value={category.categoryId}\r\n                text={category.name}\r\n            />\r\n        );\r\n    });\r\n    selectItems_Category.unshift(\r\n        <SelectItem\r\n            key=\"-1\"\r\n            disabled\r\n            hidden\r\n            value=\"placeholder-item\"\r\n            text=\"Choose an option\"\r\n        />\r\n    );\r\n\r\n\r\n    const selectProps_Category = {\r\n        id: \"category\",\r\n        defaultValue: \"placeholder-item\",\r\n        labelText: \"Category\",\r\n    };\r\n\r\n    const selectItems_Status = [\r\n        <SelectItem\r\n            key=\"-1\"\r\n            disabled\r\n            hidden\r\n            value=\"placeholder-item\"\r\n            text=\"Choose an option\"\r\n        />,\r\n        <SelectItem key=\"0\" value=\"NOT_PUBLISHED\" text=\"Not Published\"/>,\r\n        <SelectItem key=\"1\" value=\"PUBLISHED\" text=\"Published\"/>,\r\n    ];\r\n\r\n    const selectProps_Status = {\r\n        id: \"status\",\r\n        defaultValue: \"placeholder-item\",\r\n        labelText: \"Status\",\r\n    };\r\n\r\n    const textInputProps_Name = {\r\n        id: \"name\",\r\n        labelText: \"Name\",\r\n    };\r\n\r\n    const textInputProps_Documentation = {\r\n        id: \"documentation\",\r\n        labelText: \"Documentation Address\",\r\n    };\r\n\r\n    const textInputProps_Version = {\r\n        id: \"version\",\r\n        labelText: \"Version\",\r\n    };\r\n\r\n    const textAreaProps_Description = {\r\n        id: \"description\",\r\n        labelText: \"Description\",\r\n        cols: 50,\r\n        rows: 4,\r\n    };\r\n\r\n    const fileUploaderProps_Images = {\r\n        id: \"images\",\r\n        buttonLabel: \"Add Files\",\r\n        labelDescription:\r\n            \"Max file size is 500kb. Max 4 images. Supported file types are .jpg, .png, and .pdf\",\r\n    };\r\n\r\n    const fieldsetFileUploaderProps_Images = {\r\n        legendText: \"Upload Images\",\r\n    };\r\n\r\n    const imagesChangeHandler = (e) => {\r\n        changeNewBundleGroup(\"descriptionImage\", e.target.value)\r\n    }\r\n\r\n    const nameChangeHandler = (e) => {\r\n        changeNewBundleGroup(\"name\", e.target.value)\r\n    }\r\n\r\n    const categoryChangeHandler = (e) => {\r\n        changeNewBundleGroup(\"categories\", [e.target.value])\r\n    }\r\n\r\n    const documentationChangeHandler = (e) => {\r\n        changeNewBundleGroup(\"documentationUrl\", e.target.value)\r\n    }\r\n\r\n    const versionChangeHandler = (e) => {\r\n        // const value = e.target.value;\r\n        // setNewBundleGroup(prev => {\r\n        //   return {\r\n        //     ...prev,\r\n        //     version: value\r\n        //   }\r\n        // })\r\n        //changeNewBundleGroup(\"version\", e.target.value)\r\n    }\r\n\r\n    const statusChangeHandler = (e) => {\r\n        changeNewBundleGroup(\"status\", e.target.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (e) => {\r\n        changeNewBundleGroup(\"description\", e.target.value)\r\n    }\r\n\r\n    const onAddOrRemoveBundleFromList = (newBundleList) => {\r\n        changeNewBundleGroup(\"children\", newBundleList)\r\n    }\r\n\r\n    console.log(\"NBG\", newBundleGroup)\r\n\r\n    return (\r\n        <>\r\n            <Content>\r\n                <FormGroup {...fieldsetFileUploaderProps_Images}>\r\n                    <FileUploader onChange={imagesChangeHandler} {...fileUploaderProps_Images} />\r\n                </FormGroup>\r\n                <TextInput onChange={nameChangeHandler} {...textInputProps_Name} />\r\n                <Select onChange={categoryChangeHandler} {...selectProps_Category}>{selectItems_Category}</Select>\r\n                <TextInput onChange={documentationChangeHandler} {...textInputProps_Documentation} />\r\n                <TextInput onChange={versionChangeHandler} {...textInputProps_Version} />\r\n                <Select onChange={statusChangeHandler} {...selectProps_Status}>{selectItems_Status}</Select>\r\n                <TextArea onChange={descriptionChangeHandler} {...textAreaProps_Description} />\r\n                <AddBundleToBundleGroup onAddOrRemoveBundleFromList={onAddOrRemoveBundleFromList}/>\r\n                {/*\r\n                    <Button type=\"submit\">Submit</Button>\r\n*/}\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewBundleGroup;\r\n","import {Button, Modal} from \"carbon-components-react\";\r\nimport {Add16} from '@carbon/icons-react';\r\nimport ReactDOM from \"react-dom\";\r\nimport {useState} from \"react\";\r\nimport NewBundleGroup from \"./new-boundle-group/NewBundleGroup\";\r\nimport {addNewBundle, addNewBundleGroup} from \"../../../integration/Integration\";\r\n\r\n\r\nexport const ModalAddNewBundleGroup = ({afterSubmit}) => {\r\n\r\n\r\n    const ModalStateManager = ({\r\n                                   renderLauncher: LauncherContent,\r\n                                   children: ModalContent,\r\n                               }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const [elemKey, setElemKey] = useState(((new Date()).getTime()).toString()) //to clear form data\r\n        const [newBundleGroup, setNewBundleGroup] = useState({})\r\n\r\n        const onDataChange = (newBundleGroup)=>{\r\n            setNewBundleGroup(newBundleGroup)\r\n        }\r\n\r\n        const onRequestClose = (e) =>{\r\n            setOpen(false)\r\n            resetData()\r\n        }\r\n\r\n        const onRequestOpen = (e) =>{\r\n            setOpen(true)\r\n        }\r\n\r\n        const resetData = ()=>{\r\n            setElemKey(((new Date()).getTime()).toString())\r\n        }\r\n\r\n        const onRequestSubmit = (e) => {\r\n            e.preventDefault();\r\n            (async () => {\r\n                //create bundle children\r\n                let newChildren = []\r\n                if(newBundleGroup.children && newBundleGroup.children.length) {\r\n                    let respArray = await Promise.all(newBundleGroup.children.map(addNewBundle))\r\n                    console.log(\"respArray\", respArray)\r\n                    newChildren = respArray.map(res => res.newBundle.data.bundleId)\r\n                }\r\n                console.log(\"newChildren\", newChildren)\r\n                const toSend = {\r\n                    ...newBundleGroup,\r\n                    children: newChildren\r\n                }\r\n                const res = await addNewBundleGroup(toSend)\r\n                console.log(\"addNewBundleGroup\", res)\r\n                setNewBundleGroup(toSend)\r\n                resetData()\r\n                afterSubmit()\r\n\r\n            })()\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {!ModalContent || typeof document === 'undefined'\r\n                    ? null\r\n                    : ReactDOM.createPortal(\r\n                        <ModalContent open={open} onRequestClose={onRequestClose} onDataChange={onDataChange} onRequestSubmit={onRequestSubmit} elemKey={elemKey}/>,\r\n                        document.body\r\n                    )}\r\n                {LauncherContent && <LauncherContent onRequestOpen={onRequestOpen}/>}\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ModalStateManager\r\n            renderLauncher={({onRequestOpen}) => (\r\n                <Button onClick={onRequestOpen} renderIcon={Add16}>Add</Button>\r\n            )}>\r\n            {({open, onRequestClose, onDataChange, onRequestSubmit, elemKey}) => (\r\n                <Modal\r\n                    modalLabel=\"Add\"\r\n                    primaryButtonText=\"Add\"\r\n                    secondaryButtonText=\"Cancel\"\r\n                    open={open}\r\n                    onRequestClose={onRequestClose}\r\n                    onRequestSubmit={onRequestSubmit}>\r\n                    <NewBundleGroup key={elemKey} onDataChange={onDataChange}/>\r\n                </Modal>\r\n            )}\r\n        </ModalStateManager>\r\n    );\r\n};\r\n","import CatalogPageHeader from \"./catalog-page-header/CatalogPageHeader\";\r\nimport CatalogPageFooter from \"./catalog-page-footer/CatalogPageFooter\";\r\nimport {Content} from \"carbon-components-react\";\r\nimport CatalogPageContent from \"./catalog-page-content/CatalogPageContent\";\r\nimport EhBreadcrumb from \"../../components/eh-bradcrumb/EhBreadcrumb\";\r\nimport {ModalAddNewBundleGroup} from \"./modal-add-new-bundle-group/ModalAddNewBundleGroup\";\r\nimport {useState} from \"react\";\r\n\r\nimport './catalogPage.scss';\r\n\r\nconst CatalogPage = () => {\r\n    const [reloadToken, setReloadToken] = useState(((new Date()).getTime()).toString())\r\n\r\n    const afterSubmit = ()=>{\r\n        setReloadToken(((new Date()).getTime()).toString())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CatalogPageHeader/>\r\n            <Content className=\"CatalogPage\">\r\n                <div className=\"bx--grid bx--grid--full-width catalog-page\">\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col-lg-16 CatalogPage-breadcrumb\">\r\n                            <EhBreadcrumb/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col-lg-4 CatalogPage-section\">\r\n                            Categories\r\n                        </div>\r\n                        <div className=\"bx--col-lg-6 CatalogPage-section\">\r\n                            Catalog\r\n                        </div>\r\n                        <div className=\"bx--col-lg-2 CatalogPage-section\">\r\n                            <ModalAddNewBundleGroup afterSubmit={afterSubmit}/>\r\n                        </div>\r\n                        <div className=\"bx--col-lg-4 CatalogPage-section\">\r\n                            Search\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bx--row\">\r\n                        <CatalogPageContent reloadToken={reloadToken}/>\r\n                    </div>\r\n                </div>\r\n            </Content>\r\n         <CatalogPageFooter/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CatalogPage;\r\n","import React from 'react';\r\nimport Login from \"../../../components/Login/Login\";\r\nimport './catalog-page-header-internal.scss';\r\n\r\nconst CatalogPageHeaderInternal = () => {\r\n  return (\r\n      <>\r\n        <header className=\"CatalogPageHeader\">\r\n            <div className=\"CatalogPageHeader-header-top\">\r\n            <a href=\"#root-to-home\" className=\"CatalogPageHeader-logo\">\r\n                <img src={`${process.env.REACT_APP_PUBLIC_ASSETS_URL}/Logo.png`} alt=\"Entando logo\" />\r\n            </a>\r\n            </div>\r\n        </header>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default CatalogPageHeaderInternal;\r\n","import {Button, CodeSnippet, Modal} from \"carbon-components-react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst InstallationInfo = ({bundleGroup, children}) => {\r\n    console.log(\"InstallationInfo\",bundleGroup)\r\n    const elemList = children.map((bundle, index)=>(\r\n        <CodeSnippet key={index.toString()} type=\"multi\" feedback=\"Copied to clipboard\">\r\n            {`ent bundler from-git -r ${bundle.gitRepoAddress} -d | ent kubectl apply -n entando -f -`}\r\n        </CodeSnippet>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            To install {bundleGroup.name}:\r\n            {elemList}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const ModalInstallInformation = (props) => {\r\n    console.log(props.bundleGroup)\r\n    const ModalStateManager = ({\r\n                                   renderLauncher: LauncherContent,\r\n                                   children: ModalContent,\r\n                               }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const [bundleGroup] = useState(props.bundleGroup);\r\n        const [children] = useState(props.children);\r\n\r\n        const onRequestClose = (e) => {\r\n            setOpen(false)\r\n        }\r\n\r\n        const onRequestOpen = (e) => {\r\n            setOpen(true)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {!ModalContent || typeof document === 'undefined'\r\n                    ? null\r\n                    : ReactDOM.createPortal(\r\n                        <ModalContent open={open} onRequestClose={onRequestClose} bundleGroup={bundleGroup} children={children}/>,\r\n                        document.body\r\n                    )}\r\n                {LauncherContent && <LauncherContent onRequestOpen={onRequestOpen}/>}\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <ModalStateManager\r\n            renderLauncher={({onRequestOpen}) => (\r\n                <Button onClick={onRequestOpen}>Install</Button>\r\n            )}>\r\n            {({open, onRequestClose, bundleGroup, children}) => (\r\n                <Modal\r\n                    modalLabel={\"Install \"+bundleGroup.name}\r\n                    passiveModal\r\n                    open={open}\r\n                    onRequestClose={onRequestClose}>\r\n                    <InstallationInfo bundleGroup={bundleGroup} children={children}/>\r\n                </Modal>\r\n            )}\r\n        </ModalStateManager>\r\n    );\r\n};\r\n","import {Content, Tile, Grid, Row, Column} from \"carbon-components-react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router\";\r\nimport CatalogPageHeaderInternal\r\n  from \"../catalog/catalog-page-header-internal/CatalogPageHeaderInternal\";\r\nimport CatalogPageFooter\r\n  from \"../catalog/catalog-page-footer/CatalogPageFooter\";\r\n\r\nimport {\r\n  getAllBundlesForABundleGroup,\r\n  getSingleBundleGroup,\r\n  getSingleCategory,\r\n  getSingleOrganisation\r\n} from \"../../integration/Integration\";\r\nimport EhBreadcrumb from \"../../components/eh-bradcrumb/EhBreadcrumb\";\r\nimport {ModalInstallInformation} from \"./modal-install-information/ModalInstallInformation\";\r\n\r\nimport \"./bundle-group-page.scss\"\r\n\r\n/*\r\nBUNDLEGROUP:\r\n{\r\nname\tstring\r\ndescription\tstring\r\ndescriptionImage\tstring\r\ndocumentationUrl\tstring\r\nstatus\tstring\r\nEnum:\r\nArray [ 2 ]\r\nchildren\t[...]\r\norganisationId\tstring\r\ncategories\t[...]\r\nbundleGroupId\tstring\r\n}\r\n\r\n\r\nBUNDLE\r\n{\r\nname\tstring\r\ndescription\tstring\r\ngitRepoAddress\tstring\r\ndependencies\t[...]\r\nbundleGroups\t[...]\r\nbundleId\tstring\r\n}\r\n */\r\n\r\nconst BundleGroupPage = () => {\r\n  const [bundleGroup, setBundleGroup] = useState({});\r\n  const [organisation, setOrganisation] = useState(null);\r\n  const [category, setCategory] = useState(null);\r\n  const [children, setChildren] = useState([]);\r\n  const {id: bundleGroupId} = useParams();\r\n\r\n  // fetches the bundle group\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const fetchedBundleGroup = (await getSingleBundleGroup(\r\n          bundleGroupId)).bundleGroup;\r\n      setOrganisation(\r\n          fetchedBundleGroup.organisationId ? (await getSingleOrganisation(\r\n              fetchedBundleGroup.organisationId)).organisation : null)\r\n      setCategory(\r\n          fetchedBundleGroup.categories && fetchedBundleGroup.categories.length\r\n          > 0 ? (await getSingleCategory(\r\n              fetchedBundleGroup.categories[0])).category : null)\r\n      setChildren(\r\n          fetchedBundleGroup.children && fetchedBundleGroup.children.length > 0\r\n              ? (await getAllBundlesForABundleGroup(bundleGroupId)).bundleList\r\n              : [])\r\n      setBundleGroup(fetchedBundleGroup);\r\n    };\r\n\r\n    init();\r\n  }, [bundleGroupId]);\r\n\r\n  return (\r\n      <>\r\n        <CatalogPageHeaderInternal/>\r\n        <Content className=\"BundleGroupPage\">\r\n          <Row className=\"bx--grid bx--grid--full-width BundleGroupPage-page\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col-lg-16 BundleGroupPage-breadcrumb\">\r\n                <EhBreadcrumb pathElements={[{\r\n                  path: bundleGroup.name,\r\n                  href: window.location.href\r\n                }]}/>\r\n              </div>\r\n            </div>\r\n          </Row>\r\n          <Grid condensed>\r\n            <Row>\r\n              <Column lg={4}>\r\n                <Tile>\r\n                  <div className=\"BundleGroupPage-image\">\r\n                    <img src={`${process.env.REACT_APP_PUBLIC_ASSETS_URL}/Logo-blue.png`} alt=\"Entando logo\" />\r\n\r\n                    {bundleGroup && bundleGroup.bundleGroupdescriptionImage}\r\n                  </div>\r\n                  <ModalInstallInformation bundleGroup={bundleGroup}\r\n                                           children={children}/>\r\n                  <div className=\"BundleGroupPage-last-update\">\r\n                    Last Update\r\n                    <p>09/01/2017, 09:00 </p>\r\n                  </div>\r\n                  <hr/>\r\n                  <div className=\"BundleGroupPage-docs\">\r\n                    Link to documentation <br/>\r\n                    <a href={bundleGroup\r\n                    && bundleGroup.documentationUrl}\r\n                       target=\"_new\">Documentation</a>\r\n                  </div>\r\n                  <hr/>\r\n                  <div>\r\n                    {children && <BundleList children={children}/>}\r\n                  </div>\r\n                </Tile>\r\n              </Column>\r\n              <Column lg={12}>\r\n                <Tile>\r\n                  <p className=\"BundleGroupPage-title\">\r\n                    {bundleGroup && bundleGroup.name}\r\n                  </p>\r\n\r\n                  <div className=\"BundleGroupPage-flex\">\r\n                    <Column className=\"BundleGroupPage-specs\">\r\n                      Version\r\n                      <p>1.2.0</p>\r\n\r\n                    </Column>\r\n                    <Column className=\"BundleGroupPage-specs\">\r\n                      Category\r\n                      <p>{category && category.name}</p>\r\n\r\n                    </Column>\r\n                    <Column className=\"BundleGroupPage-specs\">\r\n                      Organization\r\n                      <p>{organisation && organisation.name}</p>\r\n\r\n                    </Column>\r\n\r\n                  </div>\r\n                  <div className=\"BundleGroupPage-description\">\r\n                    {bundleGroup && bundleGroup.description}\r\n                  </div>\r\n                  <ul className=\"BundleGroupPage-image-list\">\r\n                    <li>\r\n                      <img src={`${process.env.REACT_APP_PUBLIC_ASSETS_URL}/Tickets2.png`} alt=\"Entando logo\" />\r\n                    </li>\r\n                    <li>\r\n                      <img src={`${process.env.REACT_APP_PUBLIC_ASSETS_URL}/Tickets1.png`} alt=\"Entando logo\" />\r\n                    </li>\r\n                  </ul>\r\n                </Tile>\r\n              </Column>\r\n            </Row>\r\n          </Grid>\r\n        </Content>\r\n        <CatalogPageFooter/>\r\n      </>\r\n  )\r\n      ;\r\n};\r\n\r\n/*\r\nconst parseGitRepoAddr = (gitRepoAddress) =>\r\n  {\r\n    return gitRepoAddress ? {\r\n      name: gitRepoAddress.substring(gitRepoAddress.lastIndexOf(\"/\") + 1,\r\n          gitRepoAddress.lastIndexOf(\".\")),\r\n      gitRepoAddress\r\n    } : {\r\n      name: \"\",\r\n      gitRepoAddress: \"\"\r\n    }\r\n  }\r\n*/\r\n\r\nconst BundleList = (\r\n    {\r\n      children\r\n    }\r\n) => {\r\n  const elemList = children.map((bundle, index) =>\r\n      <li key={index.toString()}><a href={bundle.gitRepoAddress}\r\n                                    target={\"_new\"}>{bundle.name}</a></li>)\r\n\r\n  return (\r\n      <div className=\"BundleGroupPage-list-wrapper\">\r\n        <div className=\"BundleGroupPage-list\">\r\n          List of Bundles\r\n        </div>\r\n        <ul>{elemList}</ul>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nexport default BundleGroupPage;\r\n","import './index.scss';\r\nimport './App-carbon.scss';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport CatalogPage from './page/catalog/CatalogPage';\r\nimport BundleGroupPage from './page/bundle-group/BundleGroupPage';\r\nimport NewBundleGroup from './page/catalog/modal-add-new-bundle-group/new-boundle-group/NewBundleGroup';\r\n\r\n\r\nfunction AppCarbon() {\r\n    return (\r\n        <Switch>\r\n                <Route exact path=\"/\" component={CatalogPage}/>\r\n                <Route exact path=\"/bundlegroup/:id\" component={BundleGroupPage}/>\r\n                <Route path=\"/bgr/new\" component={NewBundleGroup}/>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default AppCarbon;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport '../index.css'\r\nimport AppCarbon from '../App-carbon';\r\nimport {HashRouter as Router} from \"react-router-dom\";\r\n\r\n\r\nclass XEhApp extends HTMLElement {\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('span');\r\n    ReactDOM.render(<React.StrictMode>\r\n          <Router>\r\n            <AppCarbon/>\r\n          </Router>\r\n        </React.StrictMode>,\r\n        this.appendChild(this.mountPoint));\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n}\r\ncustomElements.define(\"x-eh-app\", XEhApp);\r\n"],"sourceRoot":""}